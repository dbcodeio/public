{
    "name": "dbcode",
    "displayName": "DBCode - Database Management",
    "pricing": "Free",
    "description": "Connect to PostgreSQL, MySQL, SQL Server, SQLite, Mongo, Oracle, DuckDB and other major databases. AI queries. Create and edit tables, data, functions and procedures. Graph your data. Share reports. And more!",
    "publisher": "dbcode",
    "version": "1.17.23",
    "icon": "out/resources/logos/logo.png",
    "galleryBanner": {
        "color": "#e4ddff",
        "theme": "light"
    },
    "homepage": "https://dbcode.io",
    "qna": "https://github.com/dbcodeio/public/issues",
    "license": "SEE LICENSE IN LICENSE",
    "repository": {
        "type": "git",
        "url": "https://github.com/dbcodeio/public"
    },
    "private": true,
    "engines": {
        "vscode": "^1.95.0"
    },
    "keywords": [
        "SQL",
        "MySQL",
        "Postgresql",
        "Postgres",
        "SQL Server",
        "Database Management",
        "database client",
        "database tool",
        "Database",
        "MongoDB",
        "Cockroach",
        "MariaDB",
        "DB",
        "D1",
        "Redshift",
        "Oracle",
        "DuckDB",
        "Cassandra",
        "Snowflake",
        "DB2",
        "Redis",
        "BigQuery",
        "StarRocks",
        "Greenplum",
        "ClickHouse",
        "Dataverse (Power Platform)",
        "Trino",
        "Athena",
        "DynamoDB"
    ],
    "categories": [
        "AI",
        "Chat",
        "Data Science",
        "Programming Languages"
    ],
    "activationEvents": [
        "onRenderer:dbcode-notebook",
        "onNotebook:dbcode-notebook",
        "onLanguage:sql"
    ],
    "main": "./out/extension/extension.js",
    "l10n": "./l10n",
    "contributes": {
        "languageModelTools": [
            {
                "name": "dbcode-get-connections",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-getConnections",
                "canBeReferencedInPrompt": true,
                "displayName": "%Retrieve Connections%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Retrieve available connections. Returns a list of connections, including the name, id, type. The connection id and connection name values are required to access the other dbcode tools.",
                "inputSchema": {
                    "type": "object",
                    "properties": {}
                }
            },
            {
                "name": "dbcode-workspace-connection",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-workspaceConnection",
                "canBeReferencedInPrompt": true,
                "displayName": "%Workspace Connection%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Default connection: if the user does not specifically mention a connection this will provide the default connection if configured. It will return the name and id and type of the connection along with the database and schema names if applicable if a default connection is specified. This information can then be used to execute queries in the default connection for the current workspace.",
                "userDescription": "%Provide the configured default workspace connection.%",
                "inputSchema": {
                    "type": "object",
                    "properties": {}
                }
            },
            {
                "name": "dbcode-get-databases",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-getDatabases",
                "canBeReferencedInPrompt": true,
                "displayName": "%Retrieve Databases%",
                "modelDescription": "Retrieve all available databases for a specified connection.",
                "icon": "out/resources/logos/icon_color.svg",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName"
                    ]
                }
            },
            {
                "name": "dbcode-get-schemas",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-getSchemas",
                "canBeReferencedInPrompt": true,
                "displayName": "%Retrieve Schemas%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Retrieve the schema names for a database, if the database supports schemas.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "databaseName": {
                            "type": "string",
                            "description": "The name of the database. (required)"
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName",
                        "databaseName"
                    ]
                }
            },
            {
                "name": "dbcode-get-tables",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-getTables",
                "canBeReferencedInPrompt": true,
                "displayName": "%Retrieve Tables%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Retrieve all tables, along with their columns, foreign keys, primary keys and index information for a specified database connection.",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "databaseName": {
                            "type": "string",
                            "description": "The name of the database. (required)"
                        },
                        "schemaName": {
                            "type": "string",
                            "description": "The name of the schema (only needed when the database supports schemas)."
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName",
                        "databaseName"
                    ]
                }
            },
            {
                "name": "dbcode-execute-query",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-executeQuery",
                "canBeReferencedInPrompt": true,
                "displayName": "%Execute Query%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Executes a read-only query (SELECT) in the specified database and optional schema. For data modification (INSERT, UPDATE, DELETE, etc), use dbcode-execute-dml. For schema changes (CREATE, DROP, ALTER, etc), use dbcode-execute-ddl.",
                "userDescription": "%Executes a query in the specified database and optional schema.%",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "databaseName": {
                            "type": "string",
                            "description": "The name of the database. (required)"
                        },
                        "schemaName": {
                            "type": "string",
                            "description": "The name of the schema (only needed when the database supports schemas)."
                        },
                        "query": {
                            "type": "string",
                            "description": "The query to execute. (required)"
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName",
                        "databaseName",
                        "query"
                    ]
                }
            },
            {
                "name": "dbcode-execute-dml",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-executeDML",
                "canBeReferencedInPrompt": true,
                "displayName": "%Execute DML%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Executes a DML statement (INSERT, UPDATE, DELETE) in the specified database and optional schema. Use this tool when you need to modify data. For read-only queries, use dbcode-execute-query. For schema changes, use dbcode-execute-ddl.",
                "userDescription": "%Executes a DML statement (INSERT, UPDATE, DELETE) in the specified database and optional schema.%",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "databaseName": {
                            "type": "string",
                            "description": "The name of the database. (required)"
                        },
                        "schemaName": {
                            "type": "string",
                            "description": "The name of the schema (only needed when the database supports schemas)."
                        },
                        "statement": {
                            "type": "string",
                            "description": "The DML statement to execute. (required)"
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName",
                        "databaseName",
                        "statement"
                    ]
                }
            },
            {
                "name": "dbcode-execute-ddl",
                "tags": [
                    "editors",
                    "dbcode",
                    "vscode-editing"
                ],
                "toolReferenceName": "dbcode-executeDDL",
                "canBeReferencedInPrompt": true,
                "displayName": "%Execute DDL%",
                "icon": "out/resources/logos/icon_color.svg",
                "modelDescription": "Executes a DDL statement (CREATE, DROP, ALTER, TRUNCATE, etc.) in the specified database and optional schema. Use this tool when you need to modify database schema. For data modification, use dbcode-execute-dml. For read-only queries, use dbcode-execute-query.",
                "userDescription": "%Executes a DDL statement (CREATE, DROP, ALTER, TRUNCATE, etc.) in the specified database and optional schema.%",
                "inputSchema": {
                    "type": "object",
                    "properties": {
                        "connectionId": {
                            "type": "string",
                            "description": "The unique connection id, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "connectionName": {
                            "type": "string",
                            "description": "The name of the connection, obtained from the dbcode-get-connections tool. (required)"
                        },
                        "databaseName": {
                            "type": "string",
                            "description": "The name of the database. (required)"
                        },
                        "schemaName": {
                            "type": "string",
                            "description": "The name of the schema (only needed when the database supports schemas)."
                        },
                        "statement": {
                            "type": "string",
                            "description": "The DDL statement to execute. (required)"
                        }
                    },
                    "required": [
                        "connectionId",
                        "connectionName",
                        "databaseName",
                        "statement"
                    ]
                }
            }
        ],
        "customEditors": [
            {
                "viewType": "dbcode.dataFileViewer",
                "displayName": "DBCode",
                "selector": [
                    {
                        "filenamePattern": "*.db"
                    },
                    {
                        "filenamePattern": "*.duckdb"
                    },
                    {
                        "filenamePattern": "*.ddb"
                    },
                    {
                        "filenamePattern": "*.sqlite"
                    },
                    {
                        "filenamePattern": "*.sqlite3"
                    },
                    {
                        "filenamePattern": "*.csv"
                    },
                    {
                        "filenamePattern": "*.xlsx"
                    },
                    {
                        "filenamePattern": "*.parquet"
                    },
                    {
                        "filenamePattern": "*.avro"
                    }
                ],
                "priority": "option"
            }
        ],
        "commands": [
            {
                "command": "dbcode.item.click",
                "title": "%Open%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.item.alter",
                "title": "%Alter%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.item.create",
                "title": "%Create%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.auth.signin",
                "title": "%Sign In%",
                "category": "DBCode",
                "icon": "$(sign-in)"
            },
            {
                "command": "dbcode.history.changePassphrase",
                "title": "%History: Change Passphrase%",
                "category": "DBCode",
                "icon": "$(key)"
            },
            {
                "command": "dbcode.history.resetLocalEncryption",
                "title": "%History: Reset Local Encryption (this device)%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.auth.signout",
                "title": "%Sign Out%",
                "category": "DBCode",
                "icon": "$(sign-out)"
            },
            {
                "command": "dbcode.auth.refresh",
                "title": "%Refresh%",
                "category": "DBCode",
                "icon": "$(refresh)"
            },
            {
                "command": "dbcode.account.portal",
                "title": "%Edit License%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.account.seatEdit",
                "title": "%Edit%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.account.seatAdd",
                "title": "%Add Seat%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.account.seatDelete",
                "title": "%Delete%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.account.purchase",
                "title": "%Purchase License%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.account.generateKey",
                "title": "%Generate Key for License%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.account.generateLicense",
                "title": "%Generate License from Key%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.account.installLicense",
                "title": "%Install License%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.account.removeLicense",
                "title": "%Remove License%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.ai.changeModel",
                "title": "%Change AI Model%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.new",
                "title": "%Create New DBCode Notebook%",
                "shortTitle": "%DBCode Notebook%",
                "icon": "$(notebook)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.saveOutputOn",
                "title": "%Save Output: Off%",
                "icon": "$(error)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.saveOutputOff",
                "title": "%Save Output: On%",
                "icon": "$(pass)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.export",
                "title": "%Export / Share%",
                "icon": "$(share)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.executeExplain",
                "title": "%Explain%",
                "icon": "$(info)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.executeAnalyze",
                "title": "%Analyze%",
                "icon": "$(graph)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.notebook.executeDryRun",
                "title": "%Dry Run%",
                "icon": "$(beaker)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.sparkle",
                "title": "%Sparkle%",
                "icon": "$(sparkle)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.connections.sqlFile",
                "title": "%Create New SQL File%",
                "shortTitle": "%New SQL File%",
                "icon": "$(new-file)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.connections.execfile",
                "title": "%Execute SQL File%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.editor.open",
                "title": "%Load%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.discovery.folder",
                "title": "%Discover Connections with DBCode%",
                "category": "DBCode",
                "icon": "$(plug)"
            },
            {
                "command": "dbcode.connections.disconnect",
                "title": "%Disconnect%",
                "category": "DBCode",
                "icon": "$(debug-disconnect)"
            },
            {
                "command": "dbcode.connections.treeRefresh",
                "title": "%Refresh Connected Connections%",
                "category": "DBCode",
                "icon": "$(refresh)"
            },
            {
                "command": "dbcode.connections.quickOpen",
                "title": "%Quick Open%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.connections.copyElementLabel",
                "title": "%Copy Name%",
                "category": "DBCode",
                "icon": "$(copy)"
            },
            {
                "command": "dbcode.connections.add",
                "title": "%Add Connection%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.connections.import",
                "title": "%Import Connections%",
                "category": "DBCode",
                "icon": "$(database)"
            },
            {
                "command": "dbcode.connections.sample",
                "title": "%Explore With a Sample Database%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.connections.remove",
                "title": "%Delete Connection%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.connections.ungroup",
                "title": "%Remove from Group%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.connections.group.remove",
                "title": "%Delete Group%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.connections.group.rename",
                "title": "%Rename Group%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.connections.showOnlyDiscovered",
                "title": "%Show Only Discovered Connections%",
                "category": "DBCode",
                "icon": "$(compass-dot)"
            },
            {
                "command": "dbcode.connections.showAll",
                "title": "%Show All Connections%",
                "category": "DBCode",
                "icon": "$(compass-active)"
            },
            {
                "command": "dbcode.connections.filter",
                "title": "%Filter%",
                "category": "DBCode",
                "icon": "$(extensions-filter)"
            },
            {
                "command": "dbcode.connections.filterClear",
                "title": "%Clear Filter%",
                "category": "DBCode",
                "icon": "$(extensions-clear-search-results)"
            },
            {
                "command": "dbcode.connections.filterItems",
                "title": "%Filter%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.connections.filterItemsClear",
                "title": "%Clear Filter%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.providers.remove",
                "title": "%Delete Provider%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.providers.edit",
                "title": "%Edit Provider%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.tunnels.edit",
                "title": "%Edit Tunnel%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.tunnels.add",
                "title": "%Add Tunnel%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.tunnels.delete",
                "title": "%Delete Tunnel%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.favorites.removeAll",
                "title": "%Delete All Favorites%",
                "category": "DBCode",
                "icon": "$(clear-all)"
            },
            {
                "command": "dbcode.favorites.remove",
                "title": "%Delete Favorite%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.favorites.expandAll",
                "title": "%Expand All%",
                "category": "DBCode",
                "icon": "$(expand-all)"
            },
            {
                "command": "dbcode.favorites.collapseAll",
                "title": "%Collapse All%",
                "category": "DBCode",
                "icon": "$(collapse-all)"
            },
            {
                "command": "dbcode.connections.edit",
                "title": "%Edit Connection%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.connections.refresh",
                "title": "%Refresh%",
                "category": "DBCode",
                "icon": "$(refresh)"
            },
            {
                "command": "dbcode.connections.copy",
                "title": "%Copy Connection%",
                "category": "DBCode",
                "icon": "$(copy)"
            },
            {
                "command": "dbcode.connections.copyConnectionString",
                "title": "%Copy Connection String%",
                "category": "DBCode",
                "icon": "$(link)"
            },
            {
                "command": "dbcode.connections.select",
                "title": "%Select Connection%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.connections.workspaceDefault",
                "title": "%Select Workspace Default Connection%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.database.create",
                "title": "%Create Database%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.database.rename",
                "title": "%Rename Database%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.database.drop",
                "title": "%Drop Database%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.database.backup",
                "title": "%Backup Database%",
                "category": "DBCode",
                "icon": "$(save)"
            },
            {
                "command": "dbcode.database.restore",
                "title": "%Restore Database%",
                "category": "DBCode",
                "icon": "$(history)"
            },
            {
                "command": "dbcode.schema.create",
                "title": "%Create Schema%",
                "category": "DBCode",
                "icon": "$(add)"
            },
            {
                "command": "dbcode.schema.rename",
                "title": "%Rename Schema%",
                "category": "DBCode",
                "icon": "$(edit)"
            },
            {
                "command": "dbcode.schema.drop",
                "title": "%Drop Schema%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.editor.execute",
                "title": "%Execute with DBCode%",
                "category": "DBCode",
                "icon": "$(run)"
            },
            {
                "command": "dbcode.editor.execute#selection",
                "title": "%Execute Selection with DBCode%",
                "category": "DBCode",
                "icon": "$(run)"
            },
            {
                "command": "dbcode.editor.apply",
                "title": "%Apply to Database%",
                "category": "DBCode",
                "icon": "$(run)"
            },
            {
                "command": "dbcode.editor.executeExplain",
                "title": "%Explain%",
                "category": "DBCode",
                "icon": "$(info)"
            },
            {
                "command": "dbcode.editor.executeAnalyze",
                "title": "%Analyze%",
                "category": "DBCode",
                "icon": "$(graph)"
            },
            {
                "command": "dbcode.editor.executeDryRun",
                "title": "%Dry Run%",
                "category": "DBCode",
                "icon": "$(beaker)"
            },
            {
                "command": "dbcode.editor.copyQuery",
                "title": "%Copy Query%",
                "category": "DBCode",
                "icon": "$(copy)"
            },
            {
                "command": "dbcode.favorites.addScript",
                "title": "%Add to DBCode Favorites%",
                "category": "DBCode",
                "icon": "$(star)"
            },
            {
                "command": "dbcode.connections.group",
                "title": "%Add to Group%",
                "category": "DBCode",
                "icon": "$(group-by-ref-type)"
            },
            {
                "command": "dbcode.history.enable",
                "title": "%Enable%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.history.copysql",
                "title": "%Copy SQL%",
                "category": "DBCode",
                "icon": "$(copy)"
            },
            {
                "command": "dbcode.history.delete",
                "title": "%Delete%",
                "category": "DBCode",
                "icon": "$(trash)"
            },
            {
                "command": "dbcode.history.loadQuery",
                "title": "%Load Query%",
                "category": "DBCode",
                "icon": "$(go-to-file)"
            },
            {
                "command": "dbcode.history.showAllQueries",
                "title": "%Queries Only%",
                "category": "DBCode",
                "icon": "$(list-unordered)"
            },
            {
                "command": "dbcode.history.showTreeView",
                "title": "%Show Structured View%",
                "category": "DBCode",
                "icon": "$(list-tree)"
            },
            {
                "command": "dbcode.history.filterQueries",
                "title": "%Filter%",
                "category": "DBCode",
                "icon": "$(extensions-filter)"
            },
            {
                "command": "dbcode.history.clearFilter",
                "title": "%Clear filter%",
                "category": "DBCode",
                "icon": "$(extensions-clear-search-results)"
            },
            {
                "command": "dbcode.history.searchQueries",
                "title": "%Search History%",
                "category": "DBCode",
                "icon": "$(search)"
            },
            {
                "command": "dbcode.history.searchInConnection",
                "title": "%Search Connection Queries%",
                "category": "DBCode",
                "icon": "$(search)"
            },
            {
                "command": "dbcode.history.searchInDatabase",
                "title": "%Search Database Queries%",
                "category": "DBCode",
                "icon": "$(search)"
            },
            {
                "command": "dbcode.history.openAsTable",
                "title": "%Open History as Table%",
                "category": "DBCode",
                "icon": "$(table)"
            },
            {
                "command": "dbcode.history.openConnectionAsTable",
                "title": "%Open Connection History as Table%",
                "category": "DBCode",
                "icon": "$(table)"
            },
            {
                "command": "dbcode.history.openDatabaseAsTable",
                "title": "%Open Database History as Table%",
                "category": "DBCode",
                "icon": "$(table)"
            },
            {
                "command": "dbcode.history.expandAll",
                "title": "%Expand All%",
                "category": "DBCode",
                "icon": "$(search-expand-results)",
                "enablement": "!dbcode.history.treeView"
            },
            {
                "command": "dbcode.history.collapseAll",
                "title": "%Collapse All%",
                "category": "DBCode",
                "icon": "$(search-collapse-results)",
                "enablement": "!dbcode.history.treeView"
            },
            {
                "command": "dbcode.history.enableSync",
                "title": "%History: Enable Sync%",
                "category": "DBCode",
                "icon": "$(sync-ignored)"
            },
            {
                "command": "dbcode.history.disableSync",
                "title": "%History: Disable Sync%",
                "category": "DBCode",
                "icon": "$(sync)"
            },
            {
                "command": "dbcode.history.syncNow",
                "title": "%History: Sync Now%",
                "category": "DBCode",
                "icon": "$(sync)"
            },
            {
                "command": "dbcode.history.syncing",
                "title": "%History: Syncing...%",
                "category": "DBCode",
                "icon": "$(sync~spin)"
            },
            {
                "command": "dbcode.tables.create",
                "title": "%Create Table%",
                "icon": "$(add)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.import",
                "title": "%Import Data%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.alter",
                "title": "%Alter Table%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.rename",
                "title": "%Rename Table%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.truncate",
                "title": "%Truncate Table%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.drop",
                "title": "%Drop Table%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.open",
                "title": "%Open Table%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.openLimit",
                "title": "%Open with limit...%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.editor.context.openTable",
                "title": "%Open%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.editor.context.openTableWithLimit",
                "title": "%Open with limit...%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.tables.diagram",
                "title": "%Entity Relationship Diagram%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.mcp.start",
                "title": "%MCP Start Server%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.mcp.stop",
                "title": "%MCP Stop Server%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.mcp.oauth.revokeTokens",
                "title": "%MCP Revoke All OAuth Tokens%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.select",
                "title": "SELECT",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.selectStar",
                "title": "SELECT *",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.insert",
                "title": "INSERT",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.update",
                "title": "UPDATE",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.delete",
                "title": "DELETE",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.merge",
                "title": "MERGE",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.insertOnConflict",
                "title": "INSERT ON CONFLICT",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.updateFrom",
                "title": "UPDATE FROM",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.deleteUsing",
                "title": "DELETE USING",
                "category": "DBCode"
            },
            {
                "command": "dbcode.script.ddl",
                "title": "CREATE (DDL)",
                "category": "DBCode"
            },
            {
                "command": "dbcode.table.search",
                "title": "%Search...%",
                "category": "DBCode",
                "icon": "$(search)"
            },
            {
                "command": "dbcode.scratchFiles.openFolder",
                "title": "%Open Scratch Files Folder%",
                "category": "DBCode"
            },
            {
                "command": "dbcode.scratchFiles.delete",
                "title": "%Delete Old Scratch Files%",
                "category": "DBCode"
            }
        ],
        "keybindings": [
            {
                "command": "dbcode.editor.execute",
                "key": "windows+enter",
                "mac": "cmd+enter",
                "when": "editorTextFocus && !notebookCellListFocused && (editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode"
            },
            {
                "command": "dbcode.editor.copyQuery",
                "key": "ctrl+alt+c",
                "mac": "cmd+ctrl+c",
                "when": "editorTextFocus && (editorLangId == sql || resourceFilename =~ /.sql$/)"
            },
            {
                "command": "dbcode.editor.apply",
                "key": "windows+enter",
                "mac": "cmd+enter",
                "when": "editorTextFocus && resourceScheme == dbcode"
            },
            {
                "command": "dbcode.connections.quickOpen",
                "key": "ctrl+windows+o",
                "mac": "ctrl+cmd+o"
            },
            {
                "command": "dbcode.connections.select",
                "key": "shift+ctrl+windows+o",
                "mac": "shift+ctrl+cmd+o",
                "when": "editorTextFocus && !notebookCellListFocused && (editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode",
                "args": {
                    "contextAware": true
                }
            },
            {
                "command": "dbcode.connections.view.focus",
                "key": "ctrl+d ctrl+b",
                "mac": "cmd+d cmd+b",
                "when": "(!editorHasSelection && !editorHasMultipleSelections && !terminalFocusInAny) || ((editorHasSelection || editorHasMultipleSelections) && !editorTextFocus && !terminalFocusInAny)"
            }
        ],
        "notebooks": [
            {
                "type": "dbcode-notebook",
                "displayName": "%DBCode Notebook%",
                "priority": "default",
                "selector": [
                    {
                        "filenamePattern": "*.dbcnb"
                    },
                    {
                        "filenamePattern": "*.dbcode"
                    }
                ]
            }
        ],
        "notebookRenderer": [
            {
                "id": "dbcode-notebook-renderer",
                "displayName": "%DBCode Book Renderer%",
                "entrypoint": "./out/webview/notebook.js",
                "requiresMessaging": "always",
                "mimeTypes": [
                    "x-application/dbcode"
                ]
            }
        ],
        "views": {
            "dbcodeActivitybarContainer": [
                {
                    "id": "dbcode.connections.view",
                    "name": "%Connections%"
                },
                {
                    "id": "dbcode.tunnels.view",
                    "name": "%Tunnels%"
                },
                {
                    "id": "dbcode.favorites.view",
                    "name": "%Favorites%"
                },
                {
                    "id": "dbcode.history.view",
                    "name": "%History%"
                },
                {
                    "id": "dbcode.account.view",
                    "name": "%Account%"
                },
                {
                    "id": "dbcode.help.view",
                    "name": "%Help + Suggestions%"
                }
            ],
            "dbcodePanelContainer": [
                {
                    "type": "webview",
                    "id": "dbcode.panelView",
                    "name": "DBCode",
                    "icon": "out/resources/logos/icon.svg"
                }
            ]
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "dbcodeActivitybarContainer",
                    "icon": "out/resources/logos/icon.svg",
                    "title": "DBCode"
                }
            ],
            "panel": [
                {
                    "id": "dbcodePanelContainer",
                    "icon": "",
                    "title": "DBCode"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "dbcode.connections.view",
                "contents": "%No connections created.\n[Add Connection](command:dbcode.connections.add)\n[Import Connections](command:dbcode.connections.import)\n[Explore With a Sample Database](command:dbcode.connections.sample)\n%"
            },
            {
                "view": "dbcode.tunnels.view",
                "contents": "%No tunnels created.\n[Add New Tunnel](command:dbcode.tunnels.add)%"
            },
            {
                "view": "dbcode.history.view",
                "contents": "%Enable History to record SQL commands.\n[Enable history](command:dbcode.history.enable)%",
                "when": "!config.dbcode.history.enabled"
            },
            {
                "view": "dbcode.help.view",
                "contents": "%Looking for something else, or found a bug?\n[Docs](https://dbcode.io/docs)\n[Open GitHub Issue](https://github.com/dbcodeio/public/issues)\n%"
            }
        ],
        "menus": {
            "file/newFile": [
                {
                    "command": "dbcode.notebook.new",
                    "group": "notebook"
                }
            ],
            "view/title": [
                {
                    "command": "dbcode.connections.add",
                    "when": "view == dbcode.connections.view",
                    "group": "navigation@1"
                },
                {
                    "command": "dbcode.connections.treeRefresh",
                    "when": "view == dbcode.connections.view && dbcode.connections.refreshing == false",
                    "group": "navigation@2"
                },
                {
                    "command": "dbcode.connections.filter",
                    "when": "view == dbcode.connections.view && !dbcode.connections.filtered",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.connections.filterClear",
                    "when": "view == dbcode.connections.view && dbcode.connections.filtered",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.connections.group",
                    "when": "view == dbcode.connections.view",
                    "group": "navigation@4"
                },
                {
                    "command": "dbcode.connections.showOnlyDiscovered",
                    "when": "view == dbcode.connections.view  && dbcode.connections.showOnlyDiscovered == false",
                    "group": "navigation@5"
                },
                {
                    "command": "dbcode.connections.showAll",
                    "when": "view == dbcode.connections.view && dbcode.connections.showOnlyDiscovered == true",
                    "group": "navigation@5"
                },
                {
                    "command": "dbcode.history.searchQueries",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled",
                    "group": "navigation@1"
                },
                {
                    "command": "dbcode.history.openAsTable",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled",
                    "group": "navigation@2"
                },
                {
                    "command": "dbcode.history.filterQueries",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && !dbcode.history.filtered",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.history.clearFilter",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && dbcode.history.filtered",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.history.showAllQueries",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && !dbcode.history.treeView",
                    "group": "navigation@2"
                },
                {
                    "command": "dbcode.history.showTreeView",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && dbcode.history.treeView",
                    "group": "navigation@2"
                },
                {
                    "command": "dbcode.history.expandAll",
                    "when": "view == dbcode.history.view && dbcode.history.expanded == false && config.dbcode.history.enabled",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.history.collapseAll",
                    "when": "view == dbcode.history.view && dbcode.history.expanded == true && config.dbcode.history.enabled",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.history.enableSync",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && !config.dbcode.history.sync.enabled",
                    "group": "navigation@4"
                },
                {
                    "command": "dbcode.history.disableSync",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && config.dbcode.history.sync.enabled && !dbcode.history.syncing",
                    "group": "navigation@4"
                },
                {
                    "command": "dbcode.history.syncing",
                    "when": "view == dbcode.history.view && config.dbcode.history.enabled && config.dbcode.history.sync.enabled && dbcode.history.syncing",
                    "group": "navigation@4"
                },
                {
                    "command": "dbcode.favorites.removeAll",
                    "when": "view == dbcode.favorites.view",
                    "group": "navigation@4"
                },
                {
                    "command": "dbcode.tunnels.add",
                    "when": "view == dbcode.tunnels.view",
                    "group": "navigation"
                },
                {
                    "command": "dbcode.auth.signout",
                    "when": "view == dbcode.account.view && dbcode.auth.signedin === true",
                    "group": "navigation"
                },
                {
                    "command": "dbcode.auth.refresh",
                    "when": "view == dbcode.account.view",
                    "group": "navigation"
                },
                {
                    "command": "dbcode.auth.signin",
                    "when": "view == dbcode.account.view && dbcode.auth.signedin === false",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "dbcode.item.alter",
                    "when": "view == dbcode.connections.view && viewItem =~ /~alter~/",
                    "group": "3modify@1"
                },
                {
                    "command": "dbcode.item.create",
                    "when": "view == dbcode.connections.view && viewItem =~ /~create~/",
                    "group": "inline"
                },
                {
                    "command": "dbcode.item.create",
                    "when": "view == dbcode.connections.view && viewItem =~ /~create~/",
                    "group": "1create@1"
                },
                {
                    "command": "dbcode.account.portal",
                    "when": "view == dbcode.account.view && viewItem === license-active",
                    "group": "inline"
                },
                {
                    "command": "dbcode.account.removeLicense",
                    "when": "view == dbcode.account.view && viewItem === license-offline",
                    "group": "inline"
                },
                {
                    "command": "dbcode.account.purchase",
                    "when": "view == dbcode.account.view && viewItem === license",
                    "group": "inline"
                },
                {
                    "command": "dbcode.account.seatAdd",
                    "when": "view == dbcode.account.view && viewItem === seats",
                    "group": "inline"
                },
                {
                    "command": "dbcode.account.seatEdit",
                    "when": "view == dbcode.account.view && viewItem === seat",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.account.seatDelete",
                    "when": "view == dbcode.account.view && viewItem === seat",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.tunnels.edit",
                    "when": "view == dbcode.tunnels.view",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.tunnels.delete",
                    "when": "view == dbcode.tunnels.view",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.history.loadQuery",
                    "when": "view == dbcode.history.view && viewItem == query",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.history.copysql",
                    "when": "view == dbcode.history.view && viewItem == query",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.history.searchInConnection",
                    "when": "view == dbcode.history.view && viewItem == connection",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.history.openConnectionAsTable",
                    "when": "view == dbcode.history.view && viewItem == connection",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.history.searchInDatabase",
                    "when": "view == dbcode.history.view && viewItem == database",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.history.openDatabaseAsTable",
                    "when": "view == dbcode.history.view && viewItem == database",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.history.delete",
                    "when": "view == dbcode.history.view && (viewItem == query || viewItem == database || viewItem == connection)",
                    "group": "inline@3"
                },
                {
                    "command": "dbcode.favorites.remove",
                    "when": "view == dbcode.favorites.view && (viewItem =~ /~deletable~/)",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.connections.sqlFile",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newFile~/",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.notebook.new",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newNotebook~/",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.connections.sqlFile",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newFile~/",
                    "group": "1open@1"
                },
                {
                    "command": "dbcode.notebook.new",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~newNotebook~/",
                    "group": "1open@2"
                },
                {
                    "command": "dbcode.connections.refresh",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/",
                    "group": "2connection@1"
                },
                {
                    "command": "dbcode.connections.execfile",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~execFile~/",
                    "group": "3operation@2"
                },
                {
                    "command": "dbcode.database.backup",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~backup~/",
                    "group": "4backup@1"
                },
                {
                    "command": "dbcode.database.restore",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~restore~/",
                    "group": "4backup@2"
                },
                {
                    "command": "dbcode.database.rename",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~rename~/",
                    "group": "9destructive@1"
                },
                {
                    "command": "dbcode.database.drop",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/ && viewItem =~ /~drop~/",
                    "group": "9destructive@2"
                },
                {
                    "command": "dbcode.database.create",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/  && viewItem =~ /~databaseCreate~/",
                    "group": "2"
                },
                {
                    "command": "dbcode.schema.rename",
                    "when": "view == dbcode.connections.view && viewItem =~ /^schema-/ && viewItem =~ /~rename~/",
                    "group": "9destructive@1"
                },
                {
                    "command": "dbcode.schema.drop",
                    "when": "view == dbcode.connections.view && viewItem =~ /^schema-/ && viewItem =~ /~drop~/",
                    "group": "9destructive@2"
                },
                {
                    "command": "dbcode.schema.create",
                    "when": "view == dbcode.connections.view && viewItem =~ /^database-/  && viewItem =~ /~schemaCreate~/",
                    "group": "8"
                },
                {
                    "command": "dbcode.connections.edit",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
                    "group": "2edit@1"
                },
                {
                    "command": "dbcode.connections.copy",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
                    "group": "2edit@2"
                },
                {
                    "command": "dbcode.connections.copyConnectionString",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~copyConnectionString~/",
                    "group": "zzzommon@2"
                },
                {
                    "command": "dbcode.connections.remove",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~remove~/",
                    "group": "4"
                },
                {
                    "command": "dbcode.connections.disconnect",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~disconnect~/",
                    "group": "1connected@2"
                },
                {
                    "command": "dbcode.connections.refresh",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/",
                    "group": "1connected@1"
                },
                {
                    "command": "dbcode.connections.disconnect",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~disconnect~/",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.connections.edit",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.connections.copy",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~edit~/",
                    "group": "inline@3"
                },
                {
                    "command": "dbcode.connections.remove",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~remove~/",
                    "group": "inline@4"
                },
                {
                    "command": "dbcode.connections.ungroup",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~ungroup~/",
                    "group": "3"
                },
                {
                    "command": "dbcode.connections.group",
                    "when": "view == dbcode.connections.view && viewItem =~ /^connection-/ && viewItem =~ /~group~/",
                    "group": "3"
                },
                {
                    "command": "dbcode.connections.group.rename",
                    "when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~rename~/",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.connections.group.remove",
                    "when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~remove~/",
                    "group": "inline@2"
                },
                {
                    "command": "dbcode.connections.group.rename",
                    "when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~rename~/",
                    "group": "1"
                },
                {
                    "command": "dbcode.connections.group.remove",
                    "when": "view == dbcode.connections.view && viewItem =~ /^group-/ && viewItem =~ /~remove~/",
                    "group": "2"
                },
                {
                    "command": "dbcode.providers.edit",
                    "when": "view == dbcode.connections.view && viewItem == provider",
                    "group": "inline@1"
                },
                {
                    "command": "dbcode.providers.remove",
                    "when": "view == dbcode.connections.view && viewItem == provider",
                    "group": "inlwine@2"
                },
                {
                    "command": "dbcode.providers.edit",
                    "when": "view == dbcode.connections.view && viewItem == provider",
                    "group": "1"
                },
                {
                    "command": "dbcode.providers.remove",
                    "when": "view == dbcode.connections.view && viewItem == provider",
                    "group": "2"
                },
                {
                    "command": "dbcode.table.import",
                    "when": "view == dbcode.connections.view && viewItem =~ /^tables-/ && viewItem =~ /~import~/",
                    "group": "2action@1"
                },
                {
                    "command": "dbcode.tables.diagram",
                    "when": "view == dbcode.connections.view && (viewItem =~ /^tables-/ || viewItem =~ /^table-/) && viewItem =~ /~diagram~/",
                    "group": "3info@1"
                },
                {
                    "command": "dbcode.connections.filterItems",
                    "when": "view == dbcode.connections.view && viewItem =~ /~filter~/",
                    "group": "zdisplay@1"
                },
                {
                    "command": "dbcode.connections.filterItemsClear",
                    "when": "view == dbcode.connections.view && viewItem =~ /~filtered~/",
                    "group": "zdisplay@2"
                },
                {
                    "command": "dbcode.connections.copyElementLabel",
                    "when": "view == dbcode.connections.view",
                    "group": "zzzommon@1"
                },
                {
                    "command": "dbcode.table.openLimit",
                    "when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~openLimit~/",
                    "group": "1open@1"
                },
                {
                    "command": "dbcode.table.openLimit",
                    "when": "view == dbcode.connections.view && viewItem =~ /^view-/ && viewItem =~ /~openLimit~/",
                    "group": "1open@1"
                },
                {
                    "command": "dbcode.table.openLimit",
                    "when": "view == dbcode.connections.view && viewItem =~ /^materializedView-/ && viewItem =~ /~openLimit~/",
                    "group": "1open@1"
                },
                {
                    "submenu": "dbcode.submenu.script",
                    "when": "view == dbcode.connections.view && viewItem =~ /~script/",
                    "group": "1open@2"
                },
                {
                    "command": "dbcode.table.import",
                    "when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~import~/",
                    "group": "2actoin@1"
                },
                {
                    "command": "dbcode.table.search",
                    "when": "view == dbcode.connections.view && viewItem =~ /~search~/",
                    "group": "2actoin@2"
                },
                {
                    "command": "dbcode.table.rename",
                    "when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~rename~/",
                    "group": "3modify@2"
                },
                {
                    "command": "dbcode.table.truncate",
                    "when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~truncate~/",
                    "group": "4destructive@2"
                },
                {
                    "command": "dbcode.table.drop",
                    "when": "view == dbcode.connections.view && viewItem =~ /^table-/ && viewItem =~ /~drop~/",
                    "group": "4destructive@3"
                }
            ],
            "explorer/context": [
                {
                    "command": "dbcode.discovery.folder",
                    "when": "isFileSystemResource === true && explorerResourceIsFolder === true",
                    "group": "find"
                }
            ],
            "editor/title": [
                {
                    "command": "dbcode.editor.execute",
                    "when": "(editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode",
                    "group": "navigation@1"
                },
                {
                    "command": "dbcode.editor.apply",
                    "when": "editorLangId == sql && resourceScheme == dbcode",
                    "group": "navigation@1"
                },
                {
                    "command": "dbcode.editor.executeExplain",
                    "when": "(editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode && dbcode.editor.hasExplain",
                    "group": "navigation@2"
                },
                {
                    "command": "dbcode.editor.executeAnalyze",
                    "when": "(editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode && dbcode.editor.hasAnalyze",
                    "group": "navigation@3"
                },
                {
                    "command": "dbcode.editor.executeDryRun",
                    "when": "(editorLangId == sql || resourceFilename =~ /.sql$/) && resourceScheme != dbcode && dbcode.editor.hasDryRun",
                    "group": "navigation@4"
                }
            ],
            "editor/context": [
                {
                    "when": "resourceLangId == sql && editorHasSelection",
                    "command": "dbcode.editor.execute#selection",
                    "group": "navigation@1"
                },
                {
                    "when": "resourceLangId == sql && !editorHasSelection",
                    "command": "dbcode.editor.copyQuery",
                    "group": "navigation@1.5"
                },
                {
                    "when": "resourceLangId == sql && editorHasSelection",
                    "command": "dbcode.favorites.addScript",
                    "group": "navigation@2"
                },
                {
                    "when": "resourceLangId == sql && !editorHasSelection && resourceScheme != dbcode",
                    "command": "dbcode.editor.execute",
                    "group": "navigation@1"
                },
                {
                    "when": "resourceLangId == sql && !editorHasSelection && resourceScheme == dbcode",
                    "command": "dbcode.editor.apply",
                    "group": "navigatio@1"
                },
                {
                    "when": "resourceLangId == sql && dbcode.editor.tableContextAvailable",
                    "command": "dbcode.editor.context.openTable",
                    "group": "navigation@90"
                },
                {
                    "when": "resourceLangId == sql && dbcode.editor.tableContextAvailable",
                    "command": "dbcode.editor.context.openTableWithLimit",
                    "group": "navigation@91"
                }
            ],
            "notebook/toolbar": [
                {
                    "when": "notebookType == dbcode-notebook && dbcode.notebook.saveOutput == true",
                    "command": "dbcode.notebook.saveOutputOff",
                    "group": "navigation@1"
                },
                {
                    "when": "notebookType == dbcode-notebook && dbcode.notebook.saveOutput == false",
                    "command": "dbcode.notebook.saveOutputOn",
                    "group": "navigation@1"
                },
                {
                    "when": "notebookType == dbcode-notebook",
                    "command": "dbcode.notebook.export",
                    "group": "navigation@2"
                }
            ],
            "notebook/cell/execute": [
                {
                    "when": "notebookType == dbcode-notebook && dbcode.notebook.hasExplain",
                    "command": "dbcode.notebook.executeExplain",
                    "group": "navigation@1"
                },
                {
                    "when": "notebookType == dbcode-notebook && dbcode.notebook.hasAnalyze",
                    "command": "dbcode.notebook.executeAnalyze",
                    "group": "navigation@2"
                },
                {
                    "when": "notebookType == dbcode-notebook && dbcode.notebook.hasDryRun",
                    "command": "dbcode.notebook.executeDryRun",
                    "group": "navigation@3"
                }
            ],
            "dbcode.submenu.script": [
                {
                    "when": "viewItem =~ /~scriptSelect~/",
                    "command": "dbcode.script.select",
                    "group": "open@1"
                },
                {
                    "when": "viewItem =~ /~scriptSelect~/",
                    "command": "dbcode.script.selectStar",
                    "group": "open@2"
                },
                {
                    "when": "viewItem =~ /~scriptInsert~/",
                    "command": "dbcode.script.insert",
                    "group": "open@3"
                },
                {
                    "when": "viewItem =~ /~scriptUpdate~/",
                    "command": "dbcode.script.update",
                    "group": "open@4"
                },
                {
                    "when": "viewItem =~ /~scriptDelete~/",
                    "command": "dbcode.script.delete",
                    "group": "open@5"
                },
                {
                    "when": "viewItem =~ /~scriptMerge~/",
                    "command": "dbcode.script.merge",
                    "group": "open@6"
                },
                {
                    "when": "viewItem =~ /~scriptInsertOnConflict~/",
                    "command": "dbcode.script.insertOnConflict",
                    "group": "open@7"
                },
                {
                    "when": "viewItem =~ /~scriptUpdateFrom~/",
                    "command": "dbcode.script.updateFrom",
                    "group": "open@8"
                },
                {
                    "when": "viewItem =~ /~scriptDeleteUsing~/",
                    "command": "dbcode.script.deleteUsing",
                    "group": "open@9"
                },
                {
                    "when": "viewItem =~ /~scriptDDL~/",
                    "command": "dbcode.script.ddl",
                    "group": "open@10"
                }
            ]
        },
        "submenus": [
            {
                "id": "dbcode.submenu.script",
                "label": "%Script%"
            }
        ],
        "colors": [
            {
                "id": "dbcode.highlight",
                "description": "%Highlight color%",
                "defaults": {
                    "dark": "#7655FF",
                    "light": "#7655FF"
                }
            },
            {
                "id": "dbcode.activeStatementBackground",
                "description": "%Active statement background%",
                "defaults": {
                    "dark": "#ffffff0d",
                    "light": "#ffffff0d"
                }
            },
            {
                "id": "dbcode.insertMatchedParameterBackground",
                "description": "%Insert matched parameter background%",
                "defaults": {
                    "dark": "#ffffff0d",
                    "light": "#ffffff0d"
                }
            },
            {
                "id": "dbcode.BD0014",
                "description": "Color #BD0014",
                "defaults": {
                    "dark": "#BD0014",
                    "light": "#BD0014"
                }
            },
            {
                "id": "dbcode.F00019",
                "description": "Color #F00019",
                "defaults": {
                    "dark": "#F00019",
                    "light": "#F00019"
                }
            },
            {
                "id": "dbcode.F33246",
                "description": "Color #F33246",
                "defaults": {
                    "dark": "#F33246",
                    "light": "#F33246"
                }
            },
            {
                "id": "dbcode.F66675",
                "description": "Color #F66675",
                "defaults": {
                    "dark": "#F66675",
                    "light": "#F66675"
                }
            },
            {
                "id": "dbcode.F999A3",
                "description": "Color #F999A3",
                "defaults": {
                    "dark": "#F999A3",
                    "light": "#F999A3"
                }
            },
            {
                "id": "dbcode.FCCCD1",
                "description": "Color #FCCCD1",
                "defaults": {
                    "dark": "#FCCCD1",
                    "light": "#FCCCD1"
                }
            },
            {
                "id": "dbcode.FF5116",
                "description": "Color #FF5116",
                "defaults": {
                    "dark": "#FF5116",
                    "light": "#FF5116"
                }
            },
            {
                "id": "dbcode.FF642F",
                "description": "Color #FF642F",
                "defaults": {
                    "dark": "#FF642F",
                    "light": "#FF642F"
                }
            },
            {
                "id": "dbcode.FF7749",
                "description": "Color #FF7749",
                "defaults": {
                    "dark": "#FF7749",
                    "light": "#FF7749"
                }
            },
            {
                "id": "dbcode.FF8A62",
                "description": "Color #FF8A62",
                "defaults": {
                    "dark": "#FF8A62",
                    "light": "#FF8A62"
                }
            },
            {
                "id": "dbcode.FF9D7C",
                "description": "Color #FF9D7C",
                "defaults": {
                    "dark": "#FF9D7C",
                    "light": "#FF9D7C"
                }
            },
            {
                "id": "dbcode.FFB095",
                "description": "Color #FFB095",
                "defaults": {
                    "dark": "#FFB095",
                    "light": "#FFB095"
                }
            },
            {
                "id": "dbcode.FFC3AF",
                "description": "Color #FFC3AF",
                "defaults": {
                    "dark": "#FFC3AF",
                    "light": "#FFC3AF"
                }
            },
            {
                "id": "dbcode.004A37",
                "description": "Color #004A37",
                "defaults": {
                    "dark": "#004A37",
                    "light": "#004A37"
                }
            },
            {
                "id": "dbcode.00634A",
                "description": "Color #00634A",
                "defaults": {
                    "dark": "#00634A",
                    "light": "#00634A"
                }
            },
            {
                "id": "dbcode.007D5D",
                "description": "Color #007D5D",
                "defaults": {
                    "dark": "#007D5D",
                    "light": "#007D5D"
                }
            },
            {
                "id": "dbcode.009670",
                "description": "Color #009670",
                "defaults": {
                    "dark": "#009670",
                    "light": "#009670"
                }
            },
            {
                "id": "dbcode.00B083",
                "description": "Color #00B083",
                "defaults": {
                    "dark": "#00B083",
                    "light": "#00B083"
                }
            },
            {
                "id": "dbcode.00E3A9",
                "description": "Color #00E3A9",
                "defaults": {
                    "dark": "#00E3A9",
                    "light": "#00E3A9"
                }
            },
            {
                "id": "dbcode.0074B3",
                "description": "Color #0074B3",
                "defaults": {
                    "dark": "#0074B3",
                    "light": "#0074B3"
                }
            },
            {
                "id": "dbcode.0085CC",
                "description": "Color #0085CC",
                "defaults": {
                    "dark": "#0085CC",
                    "light": "#0085CC"
                }
            },
            {
                "id": "dbcode.0095E6",
                "description": "Color #0095E6",
                "defaults": {
                    "dark": "#0095E6",
                    "light": "#0095E6"
                }
            },
            {
                "id": "dbcode.00A6FF",
                "description": "Color #00A6FF",
                "defaults": {
                    "dark": "#00A6FF",
                    "light": "#00A6FF"
                }
            },
            {
                "id": "dbcode.1AAFFF",
                "description": "Color #1AAFFF",
                "defaults": {
                    "dark": "#1AAFFF",
                    "light": "#1AAFFF"
                }
            },
            {
                "id": "dbcode.33B8FF",
                "description": "Color #33B8FF",
                "defaults": {
                    "dark": "#33B8FF",
                    "light": "#33B8FF"
                }
            },
            {
                "id": "dbcode.4DC1FF",
                "description": "Color #4DC1FF",
                "defaults": {
                    "dark": "#4DC1FF",
                    "light": "#4DC1FF"
                }
            },
            {
                "id": "dbcode.7655FF",
                "description": "Color #7655FF",
                "defaults": {
                    "dark": "#7655FF",
                    "light": "#7655FF"
                }
            },
            {
                "id": "dbcode.F632CD",
                "description": "Color #F632CD",
                "defaults": {
                    "dark": "#F632CD",
                    "light": "#F632CD"
                }
            },
            {
                "id": "dbcode.FF4A91",
                "description": "Color #FF4A91",
                "defaults": {
                    "dark": "#FF4A91",
                    "light": "#FF4A91"
                }
            },
            {
                "id": "dbcode.FFC54F",
                "description": "Color #FFC54F",
                "defaults": {
                    "dark": "#FFC54F",
                    "light": "#FFC54F"
                }
            },
            {
                "id": "dbcode.F9F871",
                "description": "Color #F9F871",
                "defaults": {
                    "dark": "#F9F871",
                    "light": "#F9F871"
                }
            },
            {
                "id": "dbcode.D5B2A0",
                "description": "Color #D5B2A0",
                "defaults": {
                    "dark": "#D5B2A0",
                    "light": "#D5B2A0"
                }
            },
            {
                "id": "dbcode.71F9F8",
                "description": "Color #71F9F8",
                "defaults": {
                    "dark": "#71F9F8",
                    "light": "#71F9F8"
                }
            },
            {
                "id": "dbcode.67BAA7",
                "description": "Color #67BAA7",
                "defaults": {
                    "dark": "#67BAA7",
                    "light": "#67BAA7"
                }
            },
            {
                "id": "dbcode.3B8EA2",
                "description": "Color #3B8EA2",
                "defaults": {
                    "dark": "#3B8EA2",
                    "light": "#3B8EA2"
                }
            },
            {
                "id": "dbcode.B2A0D5",
                "description": "Color #B2A0D5",
                "defaults": {
                    "dark": "#B2A0D5",
                    "light": "#B2A0D5"
                }
            },
            {
                "id": "dbcode.8EA23B",
                "description": "Color #8EA23B",
                "defaults": {
                    "dark": "#8EA23B",
                    "light": "#8EA23B"
                }
            }
        ],
        "languages": [
            {
                "id": "dbcode-notebook",
                "aliases": [
                    "DBCode Notebook"
                ],
                "extensions": [
                    ".dbcnb",
                    ".dbcode"
                ],
                "icon": {
                    "light": "out/resources/logos/icon_color.svg",
                    "dark": "out/resources/logos/icon_color.svg"
                }
            }
        ],
        "icons": {
            "dbcode-access-control-list": {
                "description": "Access Control List",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea01"
                }
            },
            "dbcode-access": {
                "description": "Access",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea02"
                }
            },
            "dbcode-alter": {
                "description": "Alter",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea03"
                }
            },
            "dbcode-analytics": {
                "description": "Analytics",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea04"
                }
            },
            "dbcode-athena": {
                "description": "Athena",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea05"
                }
            },
            "dbcode-audit": {
                "description": "Audit",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea06"
                }
            },
            "dbcode-authentication": {
                "description": "Authentication",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea07"
                }
            },
            "dbcode-availability": {
                "description": "Availability",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea08"
                }
            },
            "dbcode-avro": {
                "description": "Avro",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea09"
                }
            },
            "dbcode-azure": {
                "description": "Azure",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0a"
                }
            },
            "dbcode-azuresynapse": {
                "description": "Azuresynapse",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0b"
                }
            },
            "dbcode-backup": {
                "description": "Backup",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0c"
                }
            },
            "dbcode-bigquery": {
                "description": "Bigquery",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0d"
                }
            },
            "dbcode-binary": {
                "description": "Binary",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0e"
                }
            },
            "dbcode-bit": {
                "description": "Bit",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea0f"
                }
            },
            "dbcode-boolean": {
                "description": "Boolean",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea10"
                }
            },
            "dbcode-bottleneck": {
                "description": "Bottleneck",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea11"
                }
            },
            "dbcode-cache": {
                "description": "Cache",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea12"
                }
            },
            "dbcode-cascade": {
                "description": "Cascade",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea13"
                }
            },
            "dbcode-cassandra": {
                "description": "Cassandra",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea14"
                }
            },
            "dbcode-change-data-capture": {
                "description": "Change Data Capture",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea15"
                }
            },
            "dbcode-checkpoint": {
                "description": "Checkpoint",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea16"
                }
            },
            "dbcode-clickhouse": {
                "description": "Clickhouse",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea17"
                }
            },
            "dbcode-cluster": {
                "description": "Cluster",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea18"
                }
            },
            "dbcode-cockroach": {
                "description": "Cockroach",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea19"
                }
            },
            "dbcode-collation": {
                "description": "Collation",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1a"
                }
            },
            "dbcode-collection": {
                "description": "Collection",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1b"
                }
            },
            "dbcode-column": {
                "description": "Column",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1c"
                }
            },
            "dbcode-commit": {
                "description": "Commit",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1d"
                }
            },
            "dbcode-consistency": {
                "description": "Consistency",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1e"
                }
            },
            "dbcode-constraint": {
                "description": "Constraint",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea1f"
                }
            },
            "dbcode-crash-recovery": {
                "description": "Crash Recovery",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea20"
                }
            },
            "dbcode-crud": {
                "description": "Crud",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea21"
                }
            },
            "dbcode-csv": {
                "description": "Csv",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea22"
                }
            },
            "dbcode-cursor": {
                "description": "Cursor",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea23"
                }
            },
            "dbcode-d1": {
                "description": "D1",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea24"
                }
            },
            "dbcode-data-source": {
                "description": "Data Source",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea25"
                }
            },
            "dbcode-dataverse": {
                "description": "Dataverse",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea26"
                }
            },
            "dbcode-date": {
                "description": "Date",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea27"
                }
            },
            "dbcode-datetime": {
                "description": "Datetime",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea28"
                }
            },
            "dbcode-datetimetz": {
                "description": "Datetimetz",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea29"
                }
            },
            "dbcode-db2": {
                "description": "Db2",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2a"
                }
            },
            "dbcode-ddl": {
                "description": "Ddl",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2b"
                }
            },
            "dbcode-deadlock": {
                "description": "Deadlock",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2c"
                }
            },
            "dbcode-dependency": {
                "description": "Dependency",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2d"
                }
            },
            "dbcode-deployment": {
                "description": "Deployment",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2e"
                }
            },
            "dbcode-doris": {
                "description": "Doris",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea2f"
                }
            },
            "dbcode-duckdb": {
                "description": "Duckdb",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea30"
                }
            },
            "dbcode-durability": {
                "description": "Durability",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea31"
                }
            },
            "dbcode-dynamodb": {
                "description": "Dynamodb",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea32"
                }
            },
            "dbcode-encryption": {
                "description": "Encryption",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea33"
                }
            },
            "dbcode-enum-member": {
                "description": "Enum Member",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea34"
                }
            },
            "dbcode-enum": {
                "description": "Enum",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea35"
                }
            },
            "dbcode-excel": {
                "description": "Excel",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea36"
                }
            },
            "dbcode-external-table": {
                "description": "External Table",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea37"
                }
            },
            "dbcode-failure": {
                "description": "Failure",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea38"
                }
            },
            "dbcode-firebase": {
                "description": "Firebase",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea39"
                }
            },
            "dbcode-foreign-data-wrapper": {
                "description": "Foreign Data Wrapper",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3a"
                }
            },
            "dbcode-foreign-key": {
                "description": "Foreign Key",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3b"
                }
            },
            "dbcode-function": {
                "description": "Function",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3c"
                }
            },
            "dbcode-geography": {
                "description": "Geography",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3d"
                }
            },
            "dbcode-geometry": {
                "description": "Geometry",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3e"
                }
            },
            "dbcode-greenplum": {
                "description": "Greenplum",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea3f"
                }
            },
            "dbcode-hierarchy": {
                "description": "Hierarchy",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea40"
                }
            },
            "dbcode-hint": {
                "description": "Hint",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea41"
                }
            },
            "dbcode-import": {
                "description": "Import",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea42"
                }
            },
            "dbcode-index": {
                "description": "Index",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea43"
                }
            },
            "dbcode-insert": {
                "description": "Insert",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea44"
                }
            },
            "dbcode-ip": {
                "description": "Ip",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea45"
                }
            },
            "dbcode-isolation": {
                "description": "Isolation",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea46"
                }
            },
            "dbcode-issue": {
                "description": "Issue",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea47"
                }
            },
            "dbcode-json": {
                "description": "Json",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea48"
                }
            },
            "dbcode-key": {
                "description": "Key",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea49"
                }
            },
            "dbcode-libsql": {
                "description": "Libsql",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4a"
                }
            },
            "dbcode-license": {
                "description": "License",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4b"
                }
            },
            "dbcode-mac": {
                "description": "Mac",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4c"
                }
            },
            "dbcode-mainteance": {
                "description": "Mainteance",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4d"
                }
            },
            "dbcode-mariadb": {
                "description": "Mariadb",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4e"
                }
            },
            "dbcode-materialized-view": {
                "description": "Materialized View",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea4f"
                }
            },
            "dbcode-merge": {
                "description": "Merge",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea50"
                }
            },
            "dbcode-microsoft": {
                "description": "Microsoft",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea51"
                }
            },
            "dbcode-migration": {
                "description": "Migration",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea52"
                }
            },
            "dbcode-mongodb": {
                "description": "Mongodb",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea53"
                }
            },
            "dbcode-motherduck": {
                "description": "Motherduck",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea54"
                }
            },
            "dbcode-mssql": {
                "description": "Mssql",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea55"
                }
            },
            "dbcode-mysql": {
                "description": "Mysql",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea56"
                }
            },
            "dbcode-normalization": {
                "description": "Normalization",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea57"
                }
            },
            "dbcode-null": {
                "description": "Null",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea58"
                }
            },
            "dbcode-number": {
                "description": "Number",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea59"
                }
            },
            "dbcode-odbc": {
                "description": "Odbc",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5a"
                }
            },
            "dbcode-olap": {
                "description": "Olap",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5b"
                }
            },
            "dbcode-oltp": {
                "description": "Oltp",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5c"
                }
            },
            "dbcode-optimizer": {
                "description": "Optimizer",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5d"
                }
            },
            "dbcode-oracle": {
                "description": "Oracle",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5e"
                }
            },
            "dbcode-parameters": {
                "description": "Parameters",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea5f"
                }
            },
            "dbcode-parquet": {
                "description": "Parquet",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea60"
                }
            },
            "dbcode-pivot": {
                "description": "Pivot",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea61"
                }
            },
            "dbcode-policy": {
                "description": "Policy",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea62"
                }
            },
            "dbcode-postgres": {
                "description": "Postgres",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea63"
                }
            },
            "dbcode-primary-key": {
                "description": "Primary Key",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea64"
                }
            },
            "dbcode-procedure": {
                "description": "Procedure",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea65"
                }
            },
            "dbcode-query": {
                "description": "Query",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea66"
                }
            },
            "dbcode-read": {
                "description": "Read",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea67"
                }
            },
            "dbcode-recovery": {
                "description": "Recovery",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea68"
                }
            },
            "dbcode-redis": {
                "description": "Redis",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea69"
                }
            },
            "dbcode-redshift": {
                "description": "Redshift",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6a"
                }
            },
            "dbcode-relational-database": {
                "description": "Relational Database",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6b"
                }
            },
            "dbcode-replication": {
                "description": "Replication",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6c"
                }
            },
            "dbcode-return": {
                "description": "Return",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6d"
                }
            },
            "dbcode-risingwave": {
                "description": "Risingwave",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6e"
                }
            },
            "dbcode-rollback": {
                "description": "Rollback",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea6f"
                }
            },
            "dbcode-salesforce": {
                "description": "Salesforce",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea70"
                }
            },
            "dbcode-schema": {
                "description": "Schema",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea71"
                }
            },
            "dbcode-select": {
                "description": "Select",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea72"
                }
            },
            "dbcode-server": {
                "description": "Server",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea73"
                }
            },
            "dbcode-singlestore": {
                "description": "Singlestore",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea74"
                }
            },
            "dbcode-snowflake": {
                "description": "Snowflake",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea75"
                }
            },
            "dbcode-sort": {
                "description": "Sort",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea76"
                }
            },
            "dbcode-split": {
                "description": "Split",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea77"
                }
            },
            "dbcode-sql": {
                "description": "Sql",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea78"
                }
            },
            "dbcode-sqlite": {
                "description": "Sqlite",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea79"
                }
            },
            "dbcode-starrocks": {
                "description": "Starrocks",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7a"
                }
            },
            "dbcode-string": {
                "description": "String",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7b"
                }
            },
            "dbcode-system-table": {
                "description": "System Table",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7c"
                }
            },
            "dbcode-table": {
                "description": "Table",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7d"
                }
            },
            "dbcode-time": {
                "description": "Time",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7e"
                }
            },
            "dbcode-timescale": {
                "description": "Timescale",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea7f"
                }
            },
            "dbcode-timetz": {
                "description": "Timetz",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea80"
                }
            },
            "dbcode-transpose": {
                "description": "Transpose",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea81"
                }
            },
            "dbcode-trigger": {
                "description": "Trigger",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea82"
                }
            },
            "dbcode-trino": {
                "description": "Trino",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea83"
                }
            },
            "dbcode-type": {
                "description": "Type",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea84"
                }
            },
            "dbcode-unique-constraint": {
                "description": "Unique Constraint",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea85"
                }
            },
            "dbcode-unknown": {
                "description": "Unknown",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea86"
                }
            },
            "dbcode-update": {
                "description": "Update",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea87"
                }
            },
            "dbcode-uuid": {
                "description": "Uuid",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea88"
                }
            },
            "dbcode-vector": {
                "description": "Vector",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea89"
                }
            },
            "dbcode-view": {
                "description": "View",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea8a"
                }
            },
            "dbcode-vm": {
                "description": "Vm",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea8b"
                }
            },
            "dbcode-void": {
                "description": "Void",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea8c"
                }
            },
            "dbcode-xml": {
                "description": "Xml",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea8d"
                }
            },
            "dbcode-yugabyte": {
                "description": "Yugabyte",
                "default": {
                    "fontPath": "out/resources/icons.woff",
                    "fontCharacter": "\\ea8e"
                }
            }
        },
        "configuration": [
            {
                "title": "%General%",
                "order": 1,
                "type": "object",
                "properties": {
                    "dbcode.useExecuteCodeLens": {
                        "order": 1,
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "% The code lense will provide inline actions for executing queries.%"
                    },
                    "dbcode.useLanguageServer": {
                        "order": 2,
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Enable experimental DBCode SQL language server (active statement diagnostics and completions) MariaDB and Postgres only at the moment.%"
                    },
                    "dbcode.definitionProvider.defaultAction": {
                        "order": 3,
                        "type": "string",
                        "default": "definition",
                        "enum": [
                            "definition",
                            "data"
                        ],
                        "enumDescriptions": [
                            "%Open the DDL/definition editor (Cmd/Ctrl+Click on tables/views).%",
                            "%Open the data viewer (Cmd/Ctrl+Click on tables/views).%"
                        ],
                        "markdownDescription": "%Choose the default action when using Go to Definition (Cmd/Ctrl+Click) on tables and views.%"
                    },
                    "dbcode.workspaceConnection": {
                        "order": 4,
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "default": "",
                                "markdownDescription": "%The ID of the default connection.%"
                            },
                            "database": {
                                "type": "string",
                                "default": "",
                                "markdownDescription": "%The database of the default connection.%"
                            },
                            "schema": {
                                "type": "string",
                                "default": "",
                                "markdownDescription": "%The schema of the default connection if supported.%"
                            }
                        },
                        "required": [
                            "id",
                            "database"
                        ],
                        "markdownDescription": "%The default connection for the workspace. Can be set with the command: DBCode: Select Workspace Default Connection.%"
                    }
                }
            },
            {
                "title": "%Results%",
                "order": 2,
                "type": "object",
                "properties": {
                    "dbcode.resultLocation": {
                        "order": 1,
                        "type": "string",
                        "enum": [
                            "panel",
                            "beside",
                            "below"
                        ],
                        "enumDescriptions": [
                            "%Show results in the panel.%",
                            "%Show results beside the editor.%",
                            "%Show results below the editor.%"
                        ],
                        "markdownDescription": "%Choose where to display query results.%"
                    },
                    "dbcode.maxTabs": {
                        "order": 2,
                        "type": "number",
                        "default": 3,
                        "markdownDescription": "%Number of tabs to keep per connection in the results panel (set to 0 for no tabs).%"
                    },
                    "dbcode.notebook.maxTabs": {
                        "order": 3,
                        "type": "number",
                        "default": 3,
                        "markdownDescription": "%Number of tabs to keep per notebook output cell (set to 0 for no tabs).%"
                    },
                    "dbcode.wrapTabs": {
                        "order": 4,
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Wrap tabs in the results, rather than scroll (requires a restart to take effect).%"
                    },
                    "dbcode.rowsToLoad": {
                        "order": 5,
                        "type": "number",
                        "default": 100,
                        "markdownDescription": "%Number of rows to load when opening a table or view.%"
                    },
                    "dbcode.pagination": {
                        "order": 6,
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Paginate results.%"
                    },
                    "dbcode.paginationSize": {
                        "order": 7,
                        "type": "string",
                        "default": "Auto",
                        "enum": [
                            "Auto",
                            "10",
                            "20",
                            "50",
                            "100",
                            "200",
                            "500"
                        ],
                        "enumDescriptions": [
                            "%Fit the number of results per page to the number of rows that can be displayed without scrolling.%",
                            "%Show 10 results per page.%",
                            "%Show 20 results per page.%",
                            "%Show 50 results per page.%",
                            "%Show 100 results per page.%",
                            "%Show 200 results per page.%",
                            "%Show 500 results per page.%"
                        ],
                        "markdownDescription": "%Number of rows to show per page when paginating results.%"
                    },
                    "dbcode.orderByPrimaryKey": {
                        "order": 8,
                        "type": "string",
                        "default": "No",
                        "enum": [
                            "No",
                            "Ascending",
                            "Descending"
                        ],
                        "enumDescriptions": [
                            "%Do not order by the primary key.%",
                            "%Order by the primary key in ascending order.%",
                            "%Order by the primary key in descending order.%"
                        ],
                        "markdownDescription": "%When opening a table, order by the primary key if present.%"
                    },
                    "dbcode.fontSize": {
                        "order": 9,
                        "type": "string",
                        "default": "",
                        "markdownDescription": "%Controls the font size of the results in pixels. If empty, the font size will be the same as the editor font size.%"
                    },
                    "dbcode.wrapCellText": {
                        "order": 10,
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Wrap cell text in the results.%"
                    }
                }
            },
            {
                "title": "%Data Formats%",
                "order": 4,
                "type": "object",
                "properties": {
                    "dbcode.format.dateLocalTimezone": {
                        "type": "boolean",
                        "default": true,
                        "markdownDescription": "%Show dates in your computers timezone when dates contain a timezone.%"
                    },
                    "dbcode.format.dateStyle": {
                        "type": "string",
                        "default": "ISO 9075",
                        "enum": [
                            "ISO 9075",
                            "Locale"
                        ],
                        "enumDescriptions": [
                            "%YYYY-MM-DD hh:mm:ss - Will include fractional sections and timezone if present.%",
                            "%Your computers locale format.%"
                        ],
                        "markdownDescription": "%Format to display dates and times in.%"
                    }
                }
            },
            {
                "title": "%AI%",
                "order": 6,
                "type": "object",
                "properties": {
                    "dbcode.ai.mcp.autoStart": {
                        "title": "%MCP Auto Start%",
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Automatically start the MCP Server when the extension is loaded.%"
                    },
                    "dbcode.ai.mcp.port": {
                        "title": "%MCP Port%",
                        "type": "number",
                        "default": 5002,
                        "markdownDescription": "%Port to use for the MCP Server.%"
                    },
                    "dbcode.ai.mcp.authorization": {
                        "title": "%MCP Authorization Method%",
                        "markdownDescription": "%The authorization method for the MCP Server. OAuth provides secure authentication with user approval dialogs. [more information](https://dbcode.io/docs/ai/mcp)%",
                        "type": "string",
                        "default": "OAuth",
                        "enum": [
                            "OAuth",
                            "None"
                        ],
                        "enumDescriptions": [
                            "%OAuth 2.1 with PKCE - secure authentication with user approval dialogs.%",
                            "%No authorization required - use only in trusted environments.%"
                        ]
                    },
                    "dbcode.ai.inlineCompletion": {
                        "title": "%Inline Completion%",
                        "type": "boolean",
                        "default": true,
                        "description": "%Generate inline completions using AI (Uses Copilot if installed/enabled, otherwise DBCode's hosted llama 3).%"
                    },
                    "dbcode.ai.modelId": {
                        "title": "%Inline Completion Model ID%",
                        "type": "string",
                        "default": "",
                        "description": "%The model used with the Copilot extension for inline completion when installed/enabled. If Copilot is not installed DBCode's hosted llama 3 model will be used.%"
                    }
                }
            },
            {
                "title": "%History%",
                "order": 7,
                "type": "object",
                "properties": {
                    "dbcode.history.enabled": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Record query history%"
                    },
                    "dbcode.history.recordsPerDatabase": {
                        "type": "number",
                        "default": 2000,
                        "markdownDescription": "%Number of records to store per database.%"
                    },
                    "dbcode.history.sync.enabled": {
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Enable cloud sync for query history.%"
                    }
                }
            },
            {
                "title": "%Connection Roles%",
                "order": 8,
                "type": "object",
                "properties": {
                    "dbcode.connection.role.development": {
                        "order": 1,
                        "type": "object",
                        "markdownDescription": "%Permissions for the development role.%",
                        "properties": {
                            "select": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "insert": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "update": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "delete": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "truncate": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "execute": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "create": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "alter": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "drop": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "transaction": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "maintenance": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "set/use": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "grant/revoke": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "other": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "default": {
                            "select": "allow",
                            "insert": "allow",
                            "update": "allow",
                            "delete": "allow",
                            "truncate": "allow",
                            "execute": "allow",
                            "create": "allow",
                            "alter": "allow",
                            "drop": "allow",
                            "transaction": "allow",
                            "maintenance": "allow",
                            "set/use": "allow",
                            "grant/revoke": "allow",
                            "other": "allow"
                        }
                    },
                    "dbcode.connection.role.testing": {
                        "type": "object",
                        "order": 2,
                        "markdownDescription": "%Permissions for the testing role.%",
                        "properties": {
                            "select": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "insert": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "update": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "delete": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "truncate": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "execute": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "create": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "alter": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "drop": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "transaction": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "maintenance": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "set/use": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "grant/revoke": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "other": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "default": {
                            "select": "allow",
                            "insert": "allow",
                            "update": "allow",
                            "delete": "allow",
                            "truncate": "allow",
                            "execute": "allow",
                            "create": "ask",
                            "alter": "ask",
                            "drop": "ask",
                            "transaction": "allow",
                            "maintenance": "allow",
                            "set/use": "allow",
                            "grant/revoke": "ask",
                            "other": "ask"
                        }
                    },
                    "dbcode.connection.role.production": {
                        "type": "object",
                        "order": 3,
                        "markdownDescription": "%Permissions for the production role.%",
                        "properties": {
                            "select": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "insert": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "update": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "delete": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "truncate": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "execute": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "create": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "alter": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "drop": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "transaction": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "maintenance": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "set/use": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "grant/revoke": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            },
                            "other": {
                                "type": "string",
                                "default": "allow",
                                "enum": [
                                    "allow",
                                    "ask",
                                    "deny"
                                ],
                                "enumDescriptions": [
                                    "%Allow the statement to be executed.%",
                                    "%Ask if the statement should be executed.%",
                                    "%Deny the statement from being executed.%"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "default": {
                            "select": "allow",
                            "insert": "ask",
                            "update": "ask",
                            "delete": "ask",
                            "truncate": "deny",
                            "execute": "ask",
                            "create": "deny",
                            "alter": "deny",
                            "drop": "deny",
                            "transaction": "allow",
                            "maintenance": "ask",
                            "set/use": "allow",
                            "grant/revoke": "deny",
                            "other": "ask"
                        }
                    }
                }
            },
            {
                "title": "%Connection Color%",
                "order": 9,
                "type": "object",
                "properties": {
                    "dbcode.color.applyToActiveTabBorder": {
                        "order": 1,
                        "default": true,
                        "markdownDescription": "%Apply connection color to the active editor tab lower border.%",
                        "type": "boolean"
                    },
                    "dbcode.color.applyToActiveTabBorderTop": {
                        "order": 2,
                        "default": false,
                        "markdownDescription": "%Apply connection color to the active editor tab top border.%",
                        "type": "boolean"
                    },
                    "dbcode.color.applyToActiveEditorTabBackground": {
                        "order": 3,
                        "default": false,
                        "markdownDescription": "%Apply connection color to the active editor tab background.%",
                        "type": "boolean"
                    },
                    "dbcode.color.applyToStatusBarBackground": {
                        "order": 4,
                        "default": false,
                        "markdownDescription": "%Apply connection color to the Status Bar background.%",
                        "type": "boolean"
                    },
                    "dbcode.color.applyToCommandCenterBackground": {
                        "order": 5,
                        "default": false,
                        "markdownDescription": "%Apply connection color to the Command Center background.%",
                        "type": "boolean"
                    }
                }
            },
            {
                "title": "%Cloud Providers, Connections and Tunnels%",
                "order": 999,
                "type": "object",
                "properties": {
                    "dbcode.connectionGroupOrder": {
                        "type": "array",
                        "description": "%Custom order for connection groups. Groups listed here appear first, others sort alphabetically.%",
                        "default": [],
                        "items": {
                            "type": "string"
                        }
                    },
                    "dbcode.connections": {
                        "type": "array",
                        "markdownDescription": "%Connections%",
                        "default": [],
                        "items": {
                            "type": "object",
                            "properties": {
                                "connectionId": {
                                    "type": "string",
                                    "description": "%Connection ID%"
                                },
                                "tunnelId": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%Tunnel ID to connect through%"
                                },
                                "connectionType": {
                                    "type": "string",
                                    "enum": [
                                        "host",
                                        "socket"
                                    ],
                                    "description": "%Connection Type%"
                                },
                                "group": {
                                    "type": "string",
                                    "description": "%Group name%"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "%Connection name%"
                                },
                                "host": {
                                    "type": "string",
                                    "description": "%Server address%",
                                    "default": "127.0.0.1"
                                },
                                "port": {
                                    "type": "number",
                                    "description": "%Port%"
                                },
                                "database": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%Database name%"
                                },
                                "username": {
                                    "type": "string",
                                    "description": "%Username%"
                                },
                                "password": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%Password%"
                                },
                                "salt": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%The key to encrypt the password with when saving.%"
                                },
                                "ssl": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "%Enable SSL%"
                                },
                                "sslTrustCertificate": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ],
                                    "description": "%Trust server certificate%"
                                },
                                "savePassword": {
                                    "type": "string",
                                    "description": "%Save password%",
                                    "default": "no",
                                    "enum": [
                                        "no",
                                        "session",
                                        "yes",
                                        "encrypted",
                                        "secretStorage",
                                        "na",
                                        "cmd"
                                    ],
                                    "enumDescriptions": [
                                        "%It will not be saved, you will be prompted for it when connecting each time.%",
                                        "%It will not be saved, you will be prompted for it ONCE when connecting each time VSCode starts.%",
                                        "%It will be saved in settings as plain text (not recommended).%",
                                        "%It will be encrypted and saved in settings using an encryption string. You will be prompted to enter an encryption string which will encrypt the password.%",
                                        "%It will be saved in VS Code secret storage%",
                                        "%It is not required%",
                                        "%The command will be executed and the output will be the password%"
                                    ]
                                },
                                "driver": {
                                    "type": "string",
                                    "markdownDescription": "%Driver used for connection%",
                                    "enum": [
                                        "postgres",
                                        "mysql",
                                        "mariadb",
                                        "mssql",
                                        "azure",
                                        "cockroach",
                                        "yugabyte",
                                        "timescale",
                                        "mongodb",
                                        "sqlite",
                                        "libsql",
                                        "d1",
                                        "redshift",
                                        "oracle",
                                        "duckdb",
                                        "cassandra",
                                        "snowflake",
                                        "motherduck",
                                        "db2",
                                        "redis",
                                        "starrocks",
                                        "singlestore",
                                        "doris",
                                        "bigquery",
                                        "excel",
                                        "csv",
                                        "greenplum",
                                        "clickhouse",
                                        "dataverse",
                                        "risingwave",
                                        "databricks",
                                        "trino",
                                        "elasticsearch",
                                        "questdb",
                                        "azuresynapse",
                                        "access",
                                        "avro",
                                        "parquet",
                                        "firebase",
                                        "salesforce"
                                    ]
                                },
                                "connectionTimeout": {
                                    "type": "number",
                                    "description": "%Connection timeout in seconds.%",
                                    "default": 30
                                },
                                "filters": {
                                    "type": "object",
                                    "description": "%Filters%",
                                    "default": ""
                                },
                                "color": {
                                    "type": "string",
                                    "description": "%Color for the connection%",
                                    "default": "",
                                    "enum": [
                                        "#BD0014",
                                        "#F00019",
                                        "#F33246",
                                        "#F66675",
                                        "#F999A3",
                                        "#FCCCD1",
                                        "#FF5116",
                                        "#FF642F",
                                        "#FF7749",
                                        "#FF8A62",
                                        "#FF9D7C",
                                        "#FFB095",
                                        "#FFC3AF",
                                        "#004A37",
                                        "#00634A",
                                        "#007D5D",
                                        "#009670",
                                        "#00B083",
                                        "#00E3A9",
                                        "#0074B3",
                                        "#0085CC",
                                        "#0095E6",
                                        "#00A6FF",
                                        "#1AAFFF",
                                        "#33B8FF",
                                        "#4DC1FF",
                                        "#7655FF",
                                        "#F632CD",
                                        "#FF4A91",
                                        "#FFC54F",
                                        "#F9F871",
                                        "#D5B2A0",
                                        "#71F9F8",
                                        "#67BAA7",
                                        "#3B8EA2",
                                        "#B2A0D5",
                                        "#8EA23B",
                                        ""
                                    ],
                                    "enumDescriptions": [
                                        "#BD0014",
                                        "#F00019",
                                        "#F33246",
                                        "#F66675",
                                        "#F999A3",
                                        "#FCCCD1",
                                        "#FF5116",
                                        "#FF642F",
                                        "#FF7749",
                                        "#FF8A62",
                                        "#FF9D7C",
                                        "#FFB095",
                                        "#FFC3AF",
                                        "#004A37",
                                        "#00634A",
                                        "#007D5D",
                                        "#009670",
                                        "#00B083",
                                        "#00E3A9",
                                        "#0074B3",
                                        "#0085CC",
                                        "#0095E6",
                                        "#00A6FF",
                                        "#1AAFFF",
                                        "#33B8FF",
                                        "#4DC1FF",
                                        "#7655FF",
                                        "#F632CD",
                                        "#FF4A91",
                                        "#FFC54F",
                                        "#F9F871",
                                        "#D5B2A0",
                                        "#71F9F8",
                                        "#67BAA7",
                                        "#3B8EA2",
                                        "#B2A0D5",
                                        "#8EA23B",
                                        ""
                                    ]
                                },
                                "driverOptions": {
                                    "type": "object",
                                    "markdownDescription": "%Connection options specific to the driver.%",
                                    "properties": {}
                                }
                            }
                        }
                    },
                    "dbcode.tunnels": {
                        "type": "array",
                        "markdownDescription": "%Tunnels%",
                        "default": [],
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "%Tunnel ID%"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "ssh"
                                    ],
                                    "enumDescriptions": [
                                        "SSH Connection"
                                    ],
                                    "description": "%Tunnel Type%"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "%Tunnel Name%"
                                },
                                "host": {
                                    "type": "string",
                                    "description": "%Tunnel Host%"
                                },
                                "port": {
                                    "type": "number",
                                    "description": "%Tunnel Port%"
                                },
                                "authType": {
                                    "type": "string",
                                    "enum": [
                                        "password",
                                        "key",
                                        "agent"
                                    ],
                                    "enumDescription": [
                                        "%Password authentication%",
                                        "%Key file authentication%",
                                        "%SSH Agent authentication%"
                                    ],
                                    "description": "%Tunnel Authentication Type%"
                                },
                                "savePassword": {
                                    "type": "string",
                                    "description": "%Save password%",
                                    "default": "no",
                                    "enum": [
                                        "na",
                                        "no",
                                        "session",
                                        "yes",
                                        "encrypted",
                                        "secretStorage"
                                    ],
                                    "enumDescriptions": [
                                        "%It is not required.%",
                                        "%It will not be saved, you will be prompted for it when connecting each time.%",
                                        "%It will not be saved, you will be prompted for it ONCE when connecting each time VSCode starts.%",
                                        "%It will be saved in settings as plain text (not recommended).%",
                                        "%It will be encrypted and saved in settings using an encryption string. You will be prompted to enter an encryption string which will encrypt the password.%",
                                        "%It will be saved in VS Code secret storage%"
                                    ]
                                },
                                "password": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%Tunnel Password (for password or key authentication.%"
                                },
                                "privateKeyPath": {
                                    "type": [
                                        "string",
                                        "null"
                                    ],
                                    "description": "%Tunnel private key path%"
                                },
                                "debug": {
                                    "type": "boolean",
                                    "description": "%Enable debug logging for the tunnel.%"
                                }
                            }
                        }
                    },
                    "dbcode.cloudProviders": {
                        "type": "array",
                        "markdownDescription": "%Cloud Providers%",
                        "default": [],
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "%Cloud Provider ID%"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "%Cloud Provider name%"
                                },
                                "provider": {
                                    "type": "string",
                                    "markdownDescription": "%Cloud Provider%",
                                    "enum": [
                                        "aiven",
                                        "azure",
                                        "cloudflare",
                                        "digitalocean",
                                        "turso",
                                        "neon",
                                        "supabase"
                                    ]
                                }
                            }
                        }
                    },
                    "dbcode.column.mapping": {
                        "type": "object",
                        "markdownDescription": "%Column Mapping%",
                        "default": {},
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "%Formatter ID%"
                                },
                                "columnName": {
                                    "type": "string",
                                    "description": "%Column Name%"
                                },
                                "tableName": {
                                    "type": "string",
                                    "markdownDescription": "%Table Name%"
                                },
                                "params": {
                                    "type": "object",
                                    "description": "%Parameters for the formatter%"
                                }
                            },
                            "required": [
                                "id",
                                "columnName"
                            ]
                        }
                    },
                    "dbcode.column.formatters": {
                        "type": "array",
                        "markdownDescription": "%Custom Column Formatters%",
                        "default": [],
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "code": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "id",
                                "name",
                                "code"
                            ]
                        }
                    },
                    "dbcode.table.filters": {
                        "type": "object",
                        "default": {},
                        "markdownDescription": "%Saved table filters.%",
                        "scope": "application"
                    }
                }
            },
            {
                "title": "%Scratch Files%",
                "order": 99,
                "type": "object",
                "properties": {
                    "dbcode.scratchFiles.enabled": {
                        "order": 1,
                        "type": "boolean",
                        "default": false,
                        "markdownDescription": "%Enable scratch files to save SQL snippets to disk instead of using untitled files.%"
                    },
                    "dbcode.scratchFiles.path": {
                        "order": 2,
                        "type": "string",
                        "default": "~/.dbcode/scratch",
                        "markdownDescription": "%Directory path to store scratch files. Supports ~ for home directory.%"
                    },
                    "dbcode.scratchFiles.rotationPeriod": {
                        "order": 3,
                        "type": "string",
                        "enum": [
                            "hour",
                            "day",
                            "week",
                            "month"
                        ],
                        "default": "day",
                        "enumDescriptions": [
                            "%Create a new scratch file each hour%",
                            "%Create a new scratch file each day%",
                            "%Create a new scratch file each week%",
                            "%Create a new scratch file each month%"
                        ],
                        "markdownDescription": "%How often to create a new scratch file per connection.%"
                    },
                    "dbcode.scratchFiles.delete": {
                        "order": 4,
                        "type": "string",
                        "enum": [
                            "never",
                            "1month",
                            "6months",
                            "1year"
                        ],
                        "default": "6months",
                        "enumDescriptions": [
                            "%Never automatically delete scratch files%",
                            "%Delete scratch files older than 1 month%",
                            "%Delete scratch files older than 6 months%",
                            "%Delete scratch files older than 1 year%"
                        ],
                        "markdownDescription": "%Automatically delete old scratch files based on their last modified date.%"
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run vsixprepare",
        "vsixprepare": "npm run esbuild -- --minify",
        "lint:file": "npx @biomejs/biome check --write",
        "watch": "npm run dev:build & npm run dev:server",
        "dev:build": "npm run esbuild -- --sourcemap --watch",
        "dev:server": "npx tsx ./scripts/dev-server.ts",
        "test": "vitest run --coverage",
        "test-e2e": "wdio run ./wdio.conf.ts",
        "esbuild": "npx tsx ./scripts/build.ts",
        "prepare": "husky install",
        "postinstall": "patch-package",
        "version": "tsx ./scripts/changelog.ts && git add CHANGELOG.md",
        "check-types:file": "node ./scripts/check-types-file.js",
        "ls:fetch-grammars": "tsx scripts/ls-fetch-grammars.ts",
        "ls:generate": "tsx scripts/ls-generate-grammars.ts",
        "ls:benchmark:semantic": "tsx benchmarks/ls-benchmark-semantic.ts",
        "inspect": "tsx scripts/ls-inspect-parser.ts",
        "ls:test-semantic": "tsx scripts/ls-test-semantic.ts",
        "benchmark": "vitest run src/benchmark --config vitest.benchmark.config.ts",
        "benchmark:file": "vitest run --config vitest.benchmark.config.ts",
        "benchmark:test": "vitest run --config vitest.benchmark.config.ts --testNamePattern"
    },
    "devDependencies": {
        "@azure-rest/ai-translation-text": "^1.0.1",
        "@azure/app-configuration": "^1.8.0",
        "@azure/keyvault-secrets": "^4.8.0",
        "@biomejs/biome": "^2.1.2",
        "@chevrotain/types": "^11.0.3",
        "@testcontainers/mssqlserver": "^10.13.2",
        "@testcontainers/mysql": "^10.13.2",
        "@testcontainers/postgresql": "^10.13.2",
        "@types/big.js": "^6.2.2",
        "@types/glob": "^8.1.0",
        "@types/html-escaper": "^3.0.2",
        "@types/ibm_db": "^3.2.0",
        "@types/json-diff": "^1.0.3",
        "@types/json2md": "^1.5.4",
        "@types/jstoxml": "^5.0.0",
        "@types/lodash-es": "^4.17.12",
        "@types/mocha": "^10.0.9",
        "@types/node": "^20.14.11",
        "@types/oracledb": "^6.5.1",
        "@types/pako": "^2.0.3",
        "@types/picomatch": "^3.0.1",
        "@types/postcss-url": "^10.0.4",
        "@types/react": "^19.1.4",
        "@types/react-dom": "^19.1.5",
        "@types/redis-info": "^3.0.3",
        "@types/semver": "^7.5.8",
        "@types/sshpk": "^1.17.4",
        "@types/tar": "^6.1.13",
        "@types/tinycolor2": "^1.4.6",
        "@types/unzipper": "^0.10.11",
        "@types/validator": "^13.12.2",
        "@types/vscode": "^1.95.0",
        "@types/vscode-notebook-renderer": "^1.72.3",
        "@vitest/coverage-v8": "^3.0.7",
        "@vscode/l10n-dev": "^0.0.35",
        "@wdio/cli": "^9.2.1",
        "@wdio/local-runner": "^9.2.1",
        "@wdio/mocha-framework": "^9.1.3",
        "@wdio/spec-reporter": "^9.1.3",
        "big.js": "^6.2.2",
        "esbuild": "^0.25.0",
        "esbuild-plugin-copy": "^2.1.1",
        "expect": "^29.7.0",
        "git-pull-run": "^1.5.0",
        "glob": "^11.0.1",
        "happy-dom": "^17.4.4",
        "husky": "^9.1.7",
        "json5": "^2.2.3",
        "license-checker": "^25.0.1",
        "mocha": "^11.1.0",
        "oci-common": "^2.103.0",
        "oci-objectstorage": "^2.103.0",
        "oci-secrets": "^2.103.0",
        "openai": "^4.86.1",
        "patch-package": "^8.0.0",
        "source-map": "^0.7.4",
        "svgtofont": "^6.3.1",
        "testcontainers": "^10.13.2",
        "titleize": "^4.0.0",
        "ts-node": "^10.9.2",
        "tsx": "^4.19.3",
        "vitest": "^3.0.7",
        "vscode-languageclient": "^9.0.1",
        "vscode-languageserver": "^9.0.1",
        "vscode-languageserver-textdocument": "^1.0.11",
        "wdio-vscode-service": "^6.1.2",
        "wdio-wait-for": "^3.0.11"
    },
    "dependencies": {
        "@ag-grid-community/styles": "^32.3.4",
        "@aws-sdk/client-athena": "^3.810.0",
        "@aws-sdk/client-dynamodb": "^3.893.0",
        "@aws-sdk/lib-dynamodb": "^3.893.0",
        "@blocknote/core": "^0.31.0",
        "@blocknote/mantine": "^0.31.0",
        "@blocknote/react": "^0.31.0",
        "@clickhouse/client": "^1.12.1",
        "@databricks/sql": "^1.11.0",
        "@date-fns/utc": "^2.1.0",
        "@duckdb/node-api": "^1.3.1-alpha.22",
        "@elastic/elasticsearch": "^9.0.1",
        "@google-cloud/bigquery": "^8.1.1",
        "@libsql/client": "^0.14.0",
        "@modelcontextprotocol/sdk": "^1.19.1",
        "@monaco-editor/loader": "^1.4.0",
        "@turf/bbox": "^7.2.0",
        "@types/dagre": "^0.7.52",
        "@types/mssql": "^9.1.7",
        "@vscode-elements/elements": "^1.15.0",
        "@vscode/chat-extension-utils": "^0.0.0-alpha.5",
        "@vscode/codicons": "^0.0.36",
        "@vscode/l10n": "^0.0.18",
        "@vscode/prompt-tsx": "^0.3.0-alpha.21",
        "@xyflow/react": "^12.7.0",
        "ag-charts-enterprise": "^12.2.0",
        "ag-grid-enterprise": "^34.2.0",
        "another-json-xml": "^2.0.7",
        "antlr4-c3": "^3.4.4",
        "antlr4ng": "^3.0.16",
        "base64-js": "^1.5.1",
        "better-sqlite3-multiple-ciphers": "^12.4.1",
        "cassandra-driver": "^4.8.0",
        "cbor-x": "^1.6.0",
        "chevrotain": "^11.0.3",
        "dagre": "^0.8.5",
        "date-fns": "^4.1.0",
        "debounce": "^2.2.0",
        "detect-libc": "^2.0.3",
        "dotenv": "^16.4.7",
        "fast-xml-parser": "^5.0.8",
        "file-type": "^20.4.0",
        "firebase-admin": "^13.4.0",
        "generate-password": "^1.7.1",
        "gpt-tokenizer": "^2.8.1",
        "hotkeys-js": "^3.13.9",
        "html-escaper": "^3.0.3",
        "html-to-image": "^1.11.11",
        "hyparquet-writer": "^0.6.1",
        "i": "^0.3.7",
        "ibm_db": "^3.3.0",
        "interactjs": "^1.10.27",
        "jsforce": "^3.10.4",
        "json-diff": "^1.0.6",
        "json2md": "^2.0.2",
        "jspdf": "^3.0.1",
        "jwt-decode": "^4.0.0",
        "lit": "^3.2.1",
        "lodash-es": "^4.17.21",
        "maplibre-gl": "^5.7.1",
        "mariadb": "^3.4.2",
        "monaco-editor": "^0.52.2",
        "mongodb": "^6.14.0",
        "mssql": "^11.0.1",
        "mysql2": "^3.14.2",
        "npm": "^11.2.0",
        "odbc": "^2.4.9",
        "oracledb": "^6.8.0",
        "p-queue": "^8.1.0",
        "pako": "^2.1.0",
        "panzoom": "^9.4.3",
        "picomatch": "^4.0.2",
        "postgres": "^3.4.7",
        "posthog-node": "^4.8.1",
        "pretty-ms": "^9.2.0",
        "react": "^19.1.0",
        "react-dom": "^19.1.0",
        "redis": "^4.7.0",
        "redis-info": "^3.1.0",
        "semver": "^7.7.1",
        "shiki": "^3.1.0",
        "snowflake-sdk": "^2.1.0",
        "sql-formatter": "^15.4.11",
        "ssh-config": "^5.0.3",
        "sshpk": "^1.18.0",
        "tablemark": "^3.1.0",
        "tar": "^7.4.3",
        "tinycolor2": "^1.6.0",
        "trino-client": "^0.2.7",
        "tunnel-ssh": "^5.2.0",
        "typed-emitter": "^2.1.0",
        "ulid": "^3.0.1",
        "unzipper": "^0.12.3",
        "validator": "^13.12.0",
        "vscode-messenger": "^0.4.5",
        "vscode-messenger-webview": "^0.4.5",
        "xlsx": "^0.18.5",
        "yaml": "^2.7.0",
        "yjs": "^13.6.27",
        "zod": "^3.24.2"
    }
}